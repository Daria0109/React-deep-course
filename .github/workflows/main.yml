name: CI/CD
run-name: ${{ github.actor }} is deploying the project ðŸš€

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Testing and building
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install modules
        run: npm install

      - name: Linting Typescript
        run: npm run lint:ts

      - name: Linting SCSS
        run: npm run lint:scss

      - name: Unit testing
        run: npm run unit

      - name: Build production project
        run: npm run build:prod

      - name: Upload production-ready build files
        uses: actions/upload-artifact@v3
        with:
          name: production-files
          path: ./build

  deploy:
    name: Deploy
    needs: build
    runs-on: macos-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: production-files
          path: ./build

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          github_token: ${{ secrets.ACTIONS_DEPLOY_ACCESS_TOKEN }}
          publish_dir: ./build
